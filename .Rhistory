rm(list = ls())
library(dplyr)
library(Matrix)
library(glmnet)
library(caret)
library(ROCR)
library(rpart)
library(ggplot2)
library(stringr)
setwd("/Users/chenjieyi/Documents/GitHub/Airlines-Customer-Satisfactory")
data_train <- read.csv("train.csv")
data_train <- data_train[, c(-1, -2)]
data_test <- read.csv("test.csv")
data_test <- data_test[, c(-1, -2)]
chg_df <- function(df) {
df[, 2] <- str_to_title(df[, 2])
for (i in 7:20) {
df <- df[df[, i]!=0, ]
df[, i] <- as.factor(df[, i])
}
df <- na.omit(df)
df <- mutate_if(df, is.character, as.factor)
}
data_train <- chg_df(data_train)
data_test <- chg_df(data_test)
View(data_train)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue","red"),
legend = rownames(table_count)
)
}
draw_bar(x = 2)
draw_bar(x = 4)
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"),
legend = rownames(table_count)
)
}
draw_bar(x = 2)
draw_bar(x = 4)
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"),
legend = rownames(table_count)
)
legend(cex = 0.75)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen")
)
legend("topright",
legend = rownames(table_count)
cex = 0.75)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen")
)
legend("topright",
legend = rownames(table_count),
cex = 0.75)
}
draw_bar(x = 2)
draw_bar(x = 4)
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"))
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"), pch = 16)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 0.5)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 1)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 0.75)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 0.8)
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "red", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "darkred", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "red", "darkgreen"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "darkred", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "pink", "darkgreen"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 2)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("darkblue", "pink", "darkgreen"))
legend("topright", legend = rownames(table_count),
col = c("darkblue", "pink", "darkgreen"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 2)
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("pink", "red", "darkred"))
legend("topright", legend = rownames(table_count),
col = c("pink", "red", "darkred"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("pink", "orange", "darkred"))
legend("topright", legend = rownames(table_count),
col = c("pink", "orange", "darkred"),
pch = 16, cex = 0.8, bty = "n")
}
(x = 5)
draw_bar(x = 5)
draw_bar <- function(df = data_train, x, y = 23) {
table_count <- table(df[, x], df[, y])
barplot(table_count,
main = paste0("Satisfaction Distribution by ", colnames(df)[x]),
xlab = str_to_title(colnames(df)[y]),
col = c("pink", "orange", "darkred"))
legend("topright", legend = rownames(table_count),
col = c("pink", "orange", "darkred"),
pch = 16, cex = 0.8, bty = "n")
}
draw_bar(x = 2)
draw_bar(x = 4)
draw_bar(x = 5)
set.seed(202203)
n <- nrow(data_train)
ratio <- 0.75
train_index <- sample(n, ratio * n)
data_train_2 <- data_train[train_index, ]
data_val_2<- data_train[-train_index, ]
View(data_train_2)
data_train_cl1 <- data_train %>%
mutate(sex = ifelse(Gender == "Male", 1, 0),
customer.type = ifelse(Customer.Type == "Loyal Customer", 1, 0),
type.of.travel = ifelse(Type.of.Travel == "Business travel", 1, 0),
class = ifelse(Class == "Business", 2 , ifelse(Class == "Eco", 0, 1)),
Satisfaction = ifelse(satisfaction == "satisfied", 1, 0)) %>%
select(-c(Gender, Customer.Type, Type.of.Travel, Class, satisfaction))
set.seed(77)
cs2 <- kmeans(data_train_cl1, centers = 2, nstart = 100, iter.max = 100)
cs3 <- kmeans(data_train_cl1, centers = 3, nstart = 100, iter.max = 100)
cs4 <- kmeans(data_train_cl1, centers = 4, nstart = 100, iter.max = 100)
cs5 <- kmeans(data_train_cl1, centers = 5, nstart = 100, iter.max = 100)
data_train_cl2 <- data_train_cl1
for(i in 1:23){
data_train_cl2[,i] <- as.numeric(data_train_cl2[,i])
}
ps1 <- fviz_cluster(cs2, geom = "point", data = data_train_cl2) +
ggtitle("k = 2")
library(dplyr)
library(Matrix)
library(glmnet)
library(caret)
library(ROCR)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(stringr)
library(boot)
library(kknn)
library(tree) # decision tree
library(ranger) # random forest
library(xgboost) # boosting
library(factoextra)
library(h2o) # neural network
ps1 <- fviz_cluster(cs2, geom = "point", data = data_train_cl2) +
ggtitle("k = 2")
ps2 <- fviz_cluster(cs3, geom = "point", data = data_train_cl2) +
ggtitle("k = 3")
ps3 <- fviz_cluster(cs4, geom = "point", data = data_train_cl2) +
ggtitle("k = 4")
ps4 <- fviz_cluster(cs5, geom = "point", data = data_train_cl2) +
ggtitle("k = 5")
gridExtra::grid.arrange(ps1, ps2, ps3, ps4, ncol = 2)
View(data_train)
View(data_train_cl1)
View(data_train_cl2)
View(data_train)
data_train_cl1 <- data_train %>%
mutate(Gender_2 = ifelse(Gender == "Male", 1, 0),
Customer.Type_2 = ifelse(Customer.Type == "Loyal Customer", 1, 0),
Type.of.Travel_2 = ifelse(Type.of.Travel == "Business travel", 1, 0),
Class_2 = ifelse(Class == "Business", 2 , ifelse(Class == "Eco", 0, 1)),
Satisfaction_2 = ifelse(satisfaction == "satisfied", 1, 0)) %>%
select(-c(Gender, Customer.Type, Type.of.Travel, Class, satisfaction))
for(i in 1:23){
data_train_cl1[,i] <- as.numeric(data_train_cl1[,i])
}
data_train_cl2 <- data_train_cl1 %>%
select(Customer.Type_2, Type.of.Travel_2, Class_2)
set.seed(77)
cl2 <- kmeans(data_train_cl2, centers = 2, nstart = 1000, iter.max = 100)
cl3 <- kmeans(data_train_cl2, centers = 3, nstart = 1000, iter.max = 100)
cl4 <- kmeans(data_train_cl2, centers = 4, nstart = 1000, iter.max = 100)
cl5 <- kmeans(data_train_cl2, centers = 5, nstart = 1000, iter.max = 100)
pl2 <- fviz_cluster(cl2, geom = "point", data = dd) + ggtitle("k = 2")
